#########################################################################
# Project: Turbolift - An application server for voice powered computing
#
# Component: Turbolift configuration file
# Description:
# The alice.config file contains basic configuration information
# needed by each of the Turbolift modules.  Each section, denoted
# by a section header, [], contains name = value pairs.
# Variable names have section scope only, so it's permissible
# to have a log_file entry under both [eds] and [lcd_module],
# for instance.
# This file is designed to be parsed by Python's ConfigParser
# module.
#
# Current version: 2.0
# Author: (C) 2001-2005 Rupert Scammell <rupe@sbcglobal.net>
# Date: 2005-03-12
#########################################################################

# Module registration section
# Add entries below to register new modules.
# Format is module_name = listen_port

[module_reg]

lcd_module = 8555
mp3_module = 8556
info_module = 8557
speechio_module = 8558
diagnostic_port = 8559
sysmon_module = 8560
loader_module = 8561

##############################################################

# Event Distribution Server section
[eds]

# Set to 1 to display debug messages at console:
debug_flag = 0

# Set to 1 to log debug messages to file:
log_messages = 1

# Log file to write messages to:
log_file = Logs/eds.log

#############################################################

# LCD Client section
[lcd_module]

# Set to 1 to display debug messages at console:
debug_flag = 1

# Set to 1 to log debug messages to a file:
log_messages = 1

# Log file to write messages to:
log_file = Logs/lcd_module.log

# EDS hostname / IP:
eds_host = 127.0.0.1

# EDS port:
eds_port = 8555

# LCD device name
lcd_device = /dev/ttyS0

# If the connection to lcd_device fails, second_lcd_device
# will be used as the output method.  By default, we use
# /dev/null here.
second_lcd_device = /dev/null

##########################################################

# Speech I/O client section
[speechio_module]

# Set to 1 to display debug messages at console:
debug_flag = 1

# Set to 1 to log debug messages to a file:
log_messages = 1

# Log file to write messages to:
log_file = Logs/speechio_module.log

# EDS hostname / IP:
eds_host = 127.0.0.1

# EDS port:
eds_port = 8558

# This is the hostname/IP of the CMU Sphinx2 server,
# which does speech recognition for us:
sphinx_host = 127.0.0.1

# This is the port that the CMU Sphinx2 server is
# running on (Sphinx default):
sphinx_port = 7027

# This is the hostname/IP of the Festival server,
# which does speech synthesis for us:
festival_host = 127.0.0.1

# This is the port that the Festival server is
# running on.  (Festival default):
festival_port = 1314

# Speech data file:
speech_data_file = Config/speech_data.dat

# Vocabulary file:
vocab_file = Config/alice.bind

# Command / speech binding file:
cs_bindfile = Config/alice.bind

# The variable below determines how many times a
# mis-interpreted (i.e. unrecognized phrase combination)
# must be seen paired with the same target phrase (a
# phrase that's already recognized), before the misphrase
# is 'promoted' to a recognized phrase, and associated with
# the parent phrase.
# WARNING: Option not read from here yet.

learn_threshold = 2


##########################################################

# MP3 module client section
[mp3_module]

# Set to 1 to display debug messages at console:
debug_flag = 1

# Set to 1 to log debug messages to a file:
log_messages = 1

# Log file to write messages to:
log_file = Logs/mp3_module.log

# EDS hostname / IP:
eds_host = 127.0.0.1

# EDS port:
eds_port = 8556

# Set to 1 in order to use speech feedback from this module.
# WARNING: Option not read from here yet.
speech_feedback = 1

# Module to use for LCD output:
lcdout_mod = lcd_module

# Initial volume setting:
init_volume = 110

# MP3 playlist location:
mp3_playlist = /home/alice/music/playlist 

# Helper application bindings:
# MP3 player app:
mp3_player_app = /usr/local/bin/alsaplayer -i text -d hw:1,0  

# Mixer app:
mixer_app = /usr/bin/aumix -v  

# Playlists (define your own here, see provided examples):

playlist_0_title = Full Playlist
playlist_0 = /home/alice/music/playlist

playlist_1_title = Driving Mix
playlist_1 = /home/rupe/mp3/driving

playlist_2_title = Mellow Mix
playlist_2 = /home/rupe/mp3/mellow

[loader_module]

# Set to 1 to display debug messages at console:
debug_flag = 1

# Set to 1 to log debug messages to a file:
log_messages = 1

# Log file to write messages to:
log_file = Logs/loader_module.log

# EDS hostname / IP:
eds_host = 127.0.0.1

# EDS port:
eds_port = 8561

# Banner text
lcd_line_0 = lcd_module: out '        Alice     '
lcd_line_1 = lcd_module: out '    SYSTEM ONLINE '
lcd_line_2 = lcd_module: start_display_clock 2
lcd_line_3 =

# Extra commands to do at initialization time
extra_init_command_1 =
extra_init_command_2 =
extra_init_command_3 =
extra_init_command_4 =


[info_module]

# Set to 1 to display debug messages at console:
debug_flag = 1

# Set to 1 to log debug messages to a file:
log_messages = 1

# Log file to write messages to:
log_file = Logs/info_module.log

# EDS hostname / IP:
eds_host = 127.0.0.1

# EDS port:
eds_port = 8557

# Directory to cache data in
cache_dir = /tmp

# Data channel sources:

# Salon.com (News)
channel_salon = latest
channel_salon2 = http://www.salon.com/
channel_wired = http://www.wired.com/
channel_slashdot = http://www.slashdot.org/
channel_cnn = http://www.salon.com/
channel_sfgate = http://www.sfgate.com/

